/***************************************************************************
 *   Copyright (C) 2009 by Naomasa Matsubayashi   *
 *   fadis@quaternion.sakura.ne.jp   *
 *                                                                         *
 *   All rights reserved.                                                  *
 *                                                                         *
 *   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: *
 *     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. *
 *     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. *
 *     * Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. *
 *                                                                         *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS   *
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT     *
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR *
 *   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR *
 *   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, *
 *   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,   *
 *   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR    *
 *   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF *
 *   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING  *
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS    *
 *   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.          *
 ***************************************************************************/

#ifndef EMATH_SIN_HEADER
#define EMATH_SIN_HEADER

#include <boost/preprocessor.hpp>
#include <boost/static_assert.hpp>

#include <emath/config.hpp>
#include <emath/types.hpp>

namespace emath {
  EPP_DEVICE const float sine_table[ 512 ] = {
    0.0f, 0.0122715f, 0.0245412f, 0.0368072f, 0.0490677f, 0.0613207f, 0.0735646f, 0.0857973f,
    0.0980171f, 0.110222f, 0.122411f, 0.134581f, 0.14673f, 0.158858f, 0.170962f, 0.18304f,
    0.19509f, 0.207111f, 0.219101f, 0.231058f, 0.24298f, 0.254866f, 0.266713f, 0.27852f,
    0.290285f, 0.302006f, 0.313682f, 0.32531f, 0.33689f, 0.348419f, 0.359895f, 0.371317f,
    0.382683f, 0.393992f, 0.405241f, 0.41643f, 0.427555f, 0.438616f, 0.449611f, 0.460539f,
    0.471397f, 0.482184f, 0.492898f, 0.503538f, 0.514103f, 0.52459f, 0.534998f, 0.545325f,
    0.55557f, 0.565732f, 0.575808f, 0.585798f, 0.595699f, 0.605511f, 0.615232f, 0.624859f,
    0.634393f, 0.643832f, 0.653173f, 0.662416f, 0.671559f, 0.680601f, 0.689541f, 0.698376f,
    0.707107f, 0.715731f, 0.724247f, 0.732654f, 0.740951f, 0.749136f, 0.757209f, 0.765167f,
    0.77301f, 0.780737f, 0.788346f, 0.795837f, 0.803208f, 0.810457f, 0.817585f, 0.824589f,
    0.83147f, 0.838225f, 0.844854f, 0.851355f, 0.857729f, 0.863973f, 0.870087f, 0.87607f,
    0.881921f, 0.88764f, 0.893224f, 0.898674f, 0.903989f, 0.909168f, 0.91421f, 0.919114f,
    0.92388f, 0.928506f, 0.932993f, 0.937339f, 0.941544f, 0.945607f, 0.949528f, 0.953306f,
    0.95694f, 0.960431f, 0.963776f, 0.966976f, 0.970031f, 0.97294f, 0.975702f, 0.978317f,
    0.980785f, 0.983105f, 0.985278f, 0.987301f, 0.989177f, 0.990903f, 0.99248f, 0.993907f,
    0.995185f, 0.996313f, 0.99729f, 0.998118f, 0.998795f, 0.999322f, 0.999699f, 0.999925f,
    1.0f, 0.999925f, 0.999699f, 0.999322f, 0.998795f, 0.998118f, 0.99729f, 0.996313f,
    0.995185f, 0.993907f, 0.99248f, 0.990903f, 0.989177f, 0.987301f, 0.985278f, 0.983105f,
    0.980785f, 0.978317f, 0.975702f, 0.97294f, 0.970031f, 0.966976f, 0.963776f, 0.960431f,
    0.95694f, 0.953306f, 0.949528f, 0.945607f, 0.941544f, 0.937339f, 0.932993f, 0.928506f,
    0.92388f, 0.919114f, 0.91421f, 0.909168f, 0.903989f, 0.898674f, 0.893224f, 0.88764f,
    0.881921f, 0.87607f, 0.870087f, 0.863973f, 0.857729f, 0.851355f, 0.844854f, 0.838225f,
    0.83147f, 0.824589f, 0.817585f, 0.810457f, 0.803208f, 0.795837f, 0.788346f, 0.780737f,
    0.77301f, 0.765167f, 0.757209f, 0.749136f, 0.740951f, 0.732654f, 0.724247f, 0.715731f,
    0.707107f, 0.698376f, 0.689541f, 0.680601f, 0.671559f, 0.662416f, 0.653173f, 0.643832f,
    0.634393f, 0.624859f, 0.615232f, 0.605511f, 0.595699f, 0.585798f, 0.575808f, 0.565732f,
    0.55557f, 0.545325f, 0.534998f, 0.52459f, 0.514103f, 0.503538f, 0.492898f, 0.482184f,
    0.471397f, 0.460539f, 0.449611f, 0.438616f, 0.427555f, 0.41643f, 0.405241f, 0.393992f,
    0.382683f, 0.371317f, 0.359895f, 0.348419f, 0.33689f, 0.32531f, 0.313682f, 0.302006f,
    0.290285f, 0.27852f, 0.266713f, 0.254866f, 0.24298f, 0.231058f, 0.219101f, 0.207111f,
    0.19509f, 0.18304f, 0.170962f, 0.158858f, 0.14673f, 0.134581f, 0.122411f, 0.110222f,
    0.0980171f, 0.0857973f, 0.0735646f, 0.0613207f, 0.0490677f, 0.0368072f, 0.0245412f, 0.0122715f,
    0.0f, -0.0122715f, -0.0245412f, -0.0368072f, -0.0490677f, -0.0613207f, -0.0735646f, -0.0857973f,
    -0.0980171f, -0.110222f, -0.122411f, -0.134581f, -0.14673f, -0.158858f, -0.170962f, -0.18304f,
    -0.19509f, -0.207111f, -0.219101f, -0.231058f, -0.24298f, -0.254866f, -0.266713f, -0.27852f,
    -0.290285f, -0.302006f, -0.313682f, -0.32531f, -0.33689f, -0.348419f, -0.359895f, -0.371317f,
    -0.382683f, -0.393992f, -0.405241f, -0.41643f, -0.427555f, -0.438616f, -0.449611f, -0.460539f,
    -0.471397f, -0.482184f, -0.492898f, -0.503538f, -0.514103f, -0.52459f, -0.534998f, -0.545325f,
    -0.55557f, -0.565732f, -0.575808f, -0.585798f, -0.595699f, -0.605511f, -0.615232f, -0.624859f,
    -0.634393f, -0.643832f, -0.653173f, -0.662416f, -0.671559f, -0.680601f, -0.689541f, -0.698376f,
    -0.707107f, -0.715731f, -0.724247f, -0.732654f, -0.740951f, -0.749136f, -0.757209f, -0.765167f,
    -0.77301f, -0.780737f, -0.788346f, -0.795837f, -0.803208f, -0.810457f, -0.817585f, -0.824589f,
    -0.83147f, -0.838225f, -0.844854f, -0.851355f, -0.857729f, -0.863973f, -0.870087f, -0.87607f,
    -0.881921f, -0.88764f, -0.893224f, -0.898674f, -0.903989f, -0.909168f, -0.91421f, -0.919114f,
    -0.92388f, -0.928506f, -0.932993f, -0.937339f, -0.941544f, -0.945607f, -0.949528f, -0.953306f,
    -0.95694f, -0.960431f, -0.963776f, -0.966976f, -0.970031f, -0.97294f, -0.975702f, -0.978317f,
    -0.980785f, -0.983105f, -0.985278f, -0.987301f, -0.989177f, -0.990903f, -0.99248f, -0.993907f,
    -0.995185f, -0.996313f, -0.99729f, -0.998118f, -0.998795f, -0.999322f, -0.999699f, -0.999925f,
    -1.0f, -0.999925f, -0.999699f, -0.999322f, -0.998795f, -0.998118f, -0.99729f, -0.996313f,
    -0.995185f, -0.993907f, -0.99248f, -0.990903f, -0.989177f, -0.987301f, -0.985278f, -0.983105f,
    -0.980785f, -0.978317f, -0.975702f, -0.97294f, -0.970031f, -0.966976f, -0.963776f, -0.960431f,
    -0.95694f, -0.953306f, -0.949528f, -0.945607f, -0.941544f, -0.937339f, -0.932993f, -0.928506f,
    -0.92388f, -0.919114f, -0.91421f, -0.909168f, -0.903989f, -0.898674f, -0.893224f, -0.88764f,
    -0.881921f, -0.87607f, -0.870087f, -0.863973f, -0.857729f, -0.851355f, -0.844854f, -0.838225f,
    -0.83147f, -0.824589f, -0.817585f, -0.810457f, -0.803208f, -0.795837f, -0.788346f, -0.780737f,
    -0.77301f, -0.765167f, -0.757209f, -0.749136f, -0.740951f, -0.732654f, -0.724247f, -0.715731f,
    -0.707107f, -0.698376f, -0.689541f, -0.680601f, -0.671559f, -0.662416f, -0.653173f, -0.643832f,
    -0.634393f, -0.624859f, -0.615232f, -0.605511f, -0.595699f, -0.585798f, -0.575808f, -0.565732f,
    -0.55557f, -0.545325f, -0.534998f, -0.52459f, -0.514103f, -0.503538f, -0.492898f, -0.482184f,
    -0.471397f, -0.460539f, -0.449611f, -0.438616f, -0.427555f, -0.41643f, -0.405241f, -0.393992f,
    -0.382683f, -0.371317f, -0.359895f, -0.348419f, -0.33689f, -0.32531f, -0.313682f, -0.302006f,
    -0.290285f, -0.27852f, -0.266713f, -0.254866f, -0.24298f, -0.231058f, -0.219101f, -0.207111f,
    -0.19509f, -0.18304f, -0.170962f, -0.158858f, -0.14673f, -0.134581f, -0.122411f, -0.110222f,
    -0.0980171f, -0.0857973f, -0.0735646f, -0.0613207f, -0.0490677f, -0.0368072f, -0.0245412f, -0.0122715f,
  };

  template< typename Type >
    EPP_DEVICE Type sin( Type _rad ) {
      return sine_table[ static_cast< unsigned int >( _rad / ( 2.0f * 3.141592f ) * 512.0f ) & 0x1FF ];
    }

  template< typename Type >
    EPP_DEVICE Type cos( Type _rad ) {
      return sin< Type >( _rad + 3.141592f * 0.5f );
    }
}

#endif